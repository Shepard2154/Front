{"remainingRequest":"/home/john/Documents/Projects/AudithonHack/Vue-Frontend/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/john/Documents/Projects/AudithonHack/Vue-Frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/john/Documents/Projects/AudithonHack/Vue-Frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/john/Documents/Projects/AudithonHack/Vue-Frontend/src/views/Predicting.vue?vue&type=template&id=ea4844ba&scoped=true&","dependencies":[{"path":"/home/john/Documents/Projects/AudithonHack/Vue-Frontend/src/views/Predicting.vue","mtime":1616856659349},{"path":"/home/john/Documents/Projects/AudithonHack/Vue-Frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/john/Documents/Projects/AudithonHack/Vue-Frontend/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/john/Documents/Projects/AudithonHack/Vue-Frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/john/Documents/Projects/AudithonHack/Vue-Frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}